- name: create neops worker containers
  become: yes
  become_user: "{{ neops_system_user }}"
  community.docker.docker_container:
    name: "{{ neops_container_prefix }}core-worker_{{ item }}"
    image: "{{ neops_image }}:{{ neops_image_tag }}"
    container_default_behavior: no_defaults

    labels:
      component: "worker"

    command:
      - /usr/local/bin/celery
      - -A
      - neopsapp
      - worker
      - -l
      - INFO
      - --concurrency=1
      - --prefetch-multiplier
      - 1
      - -O
      - fair
      - --without-heartbeat
    command_handling: correct

    env:
      DEBUG: "False"
      DATABASE_URL: "{{ neops_postgres_url }}"
      PGBOUNCER_TRANSACTION: "{{ (neops_pgbouncer_pool_mode == 'transaction')|ternary('True','False')|string }}"
      DJANGO_SECRET_KEY: "{{ neops_django_secret_key }}"
      DJANGO_ALLOWED_HOSTS: "{{ neops_django_allowed_hosts }}"
      REDIS_URL: "{{ neops_redis_url }}"
      # ASGI_THREADS: "${ASGI_THREADS}"
      NEOPS_PLUGINS: "{{ neops_plugins | join(' ') }}"
      ELASTICSEARCH_HOSTS: "elasticsearch:9200"
      ELASTICSEARCH_DSL_INDEX_FIELDS_LIMIT: "{{ neops_elasticsearch_dsl_index_fields_limit|string }}"
      ELASTICSEARCH_DSL_SIGNAL_PROCESSOR: "{{ neops_elasticsearch_dsl_signal_processor }}"
      NORNIR_CLOSE_CONNECTION: "{{ neops_nornir_close_connection|ternary('True','False')|string }}"
      NORNIR_CONNECTION_DELAY_FACTOR: "{{ neops_nornir_connection_delay_factor|string }}"
      NORNIR_THREADS: "{{ neops_nornir_threads|string }}"
      SENTRY_DSN: "{{ neops_sentry_dsn }}"
      SENTRY_ENVIRONMENT: "{{ neops_sentry_environment }}"
      EMAIL_URL: "{{ neops_email_url }}"
      IMPORT_DEVICE_DEFAULT_PLATFORM: "{{ neops_import_device_defaults.platform }}"
      IMPORT_DEVICE_DEFAULT_USERNAME: "{{ neops_import_device_defaults.username }}"
      IMPORT_DEVICE_DEFAULT_PASSWORD: "{{ neops_import_device_defaults.username }}"
      ETCD_HOST: "etcd"
      ETCD_PORT: "2379"

    network_mode: "{{ neops_container_network.core }}"
    networks:
      - name: "{{ neops_container_network.core }}"
        aliases:
          - worker
    purge_networks: yes

    restart_policy: always
    state: started
    pull: yes
#    recreate: yes
#    restart: yes
  loop: "{{ range(neops_scale_worker) }}"

- name: determine current scaling
  shell: "docker ps -q -a -f 'label=component=worker'"
  register: neops_scale_worker_current

- name: remove excess containters
  become: yes
  become_user: "{{ neops_system_user }}"
  community.docker.docker_container:
    name: "{{ neops_container_prefix }}core-worker_{{ item }}"
    state: absent
  loop: "{{ range(neops_scale_worker,neops_scale_worker_current.stdout_lines|length) }}"
